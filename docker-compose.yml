version: '3.3'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15
    container_name: guess_postgres
    restart: always
    environment:
      POSTGRES_DB: guessdb
      POSTGRES_USER: guessuser
      POSTGRES_PASSWORD: guesspass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - guess_network

  # Backend Flask - Instância 1
  backend1:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: guess_backend1
    restart: always
    environment:
      FLASK_DB_TYPE: postgres
      FLASK_DB_HOST: postgres
      FLASK_DB_NAME: guessdb
      FLASK_DB_USER: guessuser
      FLASK_DB_PASSWORD: guesspass
      FLASK_ENV: production
    depends_on:
      - postgres
    networks:
      - guess_network

  # Backend Flask - Instância 2 (para balanceamento de carga)
  backend2:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: guess_backend2
    restart: always
    environment:
      FLASK_DB_TYPE: postgres
      FLASK_DB_HOST: postgres
      FLASK_DB_NAME: guessdb
      FLASK_DB_USER: guessuser
      FLASK_DB_PASSWORD: guesspass
      FLASK_ENV: production
    depends_on:
      - postgres
    networks:
      - guess_network

  # Frontend React - Build da aplicação
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: guess_frontend
    volumes:
      - frontend_build:/app/build
    networks:
      - guess_network

  # NGINX - Proxy reverso e servidor frontend
  nginx:
    image: nginx:1.25-alpine
    container_name: guess_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - frontend_build:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend1
      - backend2
      - frontend
    networks:
      - guess_network

# Volumes persistentes
volumes:
  postgres_data:
    driver: local
  frontend_build:
    driver: local

# Rede para comunicação entre containers
networks:
  guess_network:
    driver: bridge 